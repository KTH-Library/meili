[{"path":"https://kth-library.github.io/meili/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 meili authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kth-library.github.io/meili/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Skyttner. Maintainer, author.","code":""},{"path":"https://kth-library.github.io/meili/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Skyttner M (2024). meili: Search MeiliSearch Index. R package version 0.1.0, https://kth-library.github.io/meili/.","code":"@Manual{,   title = {meili: Search MeiliSearch Index},   author = {Markus Skyttner},   year = {2024},   note = {R package version 0.1.0},   url = {https://kth-library.github.io/meili/}, }"},{"path":"https://kth-library.github.io/meili/index.html","id":"meili","dir":"","previous_headings":"","what":"Search MeiliSearch Index","title":"Search MeiliSearch Index","text":"Meilisearch RESTful search API. aims ready--go solution everyone wants fast relevant search experience. goal R package meili provide R client API wrapper meilisearch API, see https://www.meilisearch.com/docs/reference/api/overview.","code":""},{"path":"https://kth-library.github.io/meili/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Search MeiliSearch Index","text":"can install development version meili like :","code":"remotes::install_github(\"KTH-Library/meili\")"},{"path":"https://kth-library.github.io/meili/index.html","id":"environment-variables","dir":"","previous_headings":"","what":"Environment variables","title":"Search MeiliSearch Index","text":"package expects two environment variables set .Renviron: MEILI_KEY: key used authorize API requests, see API docs MEILI_URL: public server name meilisearch index accessible Settings used can checked using meili::meili_config(verbose = TRUE)","code":""},{"path":"https://kth-library.github.io/meili/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Search MeiliSearch Index","text":"basic example shows create search index, retrieve documents finally delete :","code":"library(meili) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tibble)  # verify settings  my_config <- meili:::meili_config(verbose = TRUE) #> Found setting for MEILI_KEY environment variable! #> Please provide MEILI_URL in .Renviron! #> Reverting to default value for MEILI_URL: https://search.bibliometrics.lib.kth.se  # ingest an in-memory data frame or an on-disk CSV file  co2 <- CO2 |> rownames_to_column(var = \"rowid\") task <- meili:::meili_ingest_csv(index = \"co2\", csvfile = co2) is_ingested <- meili:::wait_for_task(task$taskUid)  # retrieve three documents from the co2 index meili:::meili_documents(\"co2\", limit = 3) |>    select(-any_of(\"rowid\")) #> # A tibble: 3 × 5 #>   Plant Type   Treatment  conc  uptake #>   <chr> <chr>  <chr>      <chr> <chr>  #> 1 Qn1   Quebec nonchilled 95    16     #> 2 Qn1   Quebec nonchilled 175   30.4   #> 3 Qn1   Quebec nonchilled 250   34.8  # run a search for documents matching \"quebec 95\" w scores > 0.5 (on scale 0..1) meili:::meili_search(\"co2\", query = \"quebec 95\") |>    filter(`_rankingScore` > 0.5) #> # A tibble: 6 × 7 #>   rowid Plant Type   Treatment  conc  uptake `_rankingScore` #>   <chr> <chr> <chr>  <chr>      <chr> <chr>            <dbl> #> 1 1     Qn1   Quebec nonchilled 95    16               0.852 #> 2 8     Qn2   Quebec nonchilled 95    13.6             0.852 #> 3 15    Qn3   Quebec nonchilled 95    16.2             0.852 #> 4 22    Qc1   Quebec chilled    95    14.2             0.852 #> 5 29    Qc2   Quebec chilled    95    9.3              0.852 #> 6 36    Qc3   Quebec chilled    95    15.1             0.852  # delete the index  task <- meili:::meili_deleteindex(\"co2\") is_deleted <- meili:::wait_for_task(task$taskUid)"},{"path":"https://kth-library.github.io/meili/index.html","id":"searching-using-several-queries","dir":"","previous_headings":"","what":"Searching using several queries","title":"Search MeiliSearch Index","text":"make multiple search queries index: order able filter attributes, first fields possible use filtered attributes needs defined (triggers reindexing background):","code":"simple_search(c(\"Oscar\", \"backe\"), index = \"hrfile\") |>    select(fullname, unit_name) |>    head(6) #> # A tibble: 6 × 2 #>   fullname              unit_name                 #>   <chr>                 <chr>                     #> 1 Tjernberg, Oscar      MATERIAL- OCH NANOFYSIK   #> 2 Hessling, Oscar       ENHETEN PROCESSER         #> 3 Danielsson, Oscar     EECS SKOLAN               #> 4 Skirfors, Oscar       MOBILITET OCH PARTNERSKAP #> 5 Wasström, Oscar       ABE SKOLAN                #> 6 Rohde Dahlberg, Oscar KTH # make meili aware of filterable attributes for a specific index meili:::meili_index_create_filters(\"hrfile\", fields = c(\"unit_abbr\", \"title_en\"))  # these attributes can now be used in filters, for example: meili_documents(\"hrfile\", limit = 3e4,    fields = c(\"kthid\", \"title_en\", \"unit_abbr\"),    filter = \"unit_abbr = ITM\" )"},{"path":"https://kth-library.github.io/meili/reference/meili_index_create_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Create filter(s) on Meilisearch index — meili_index_create_filters","title":"Create filter(s) on Meilisearch index — meili_index_create_filters","text":"Create filter(s) Meilisearch index","code":""},{"path":"https://kth-library.github.io/meili/reference/meili_index_create_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create filter(s) on Meilisearch index — meili_index_create_filters","text":"","code":"meili_index_create_filters(index, fields)"},{"path":"https://kth-library.github.io/meili/reference/meili_index_create_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create filter(s) on Meilisearch index — meili_index_create_filters","text":"index index create filters fields fields create filters ","code":""},{"path":"https://kth-library.github.io/meili/reference/meili_ingest_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest data into Meili index — meili_ingest_csv","title":"Ingest data into Meili index — meili_ingest_csv","text":"Ingest data Meili index","code":""},{"path":"https://kth-library.github.io/meili/reference/meili_ingest_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest data into Meili index — meili_ingest_csv","text":"","code":"meili_ingest_csv(index, csvfile, primary_key)"},{"path":"https://kth-library.github.io/meili/reference/meili_ingest_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest data into Meili index — meili_ingest_csv","text":"index name index ingest data csvfile name dataframe csv file ingest index primary_key field use primary key index","code":""},{"path":"https://kth-library.github.io/meili/reference/simple_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple search in Meilisearch index — simple_search","title":"Simple search in Meilisearch index — simple_search","text":"Simple search Meilisearch index","code":""},{"path":"https://kth-library.github.io/meili/reference/simple_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple search in Meilisearch index — simple_search","text":"","code":"simple_search(index, q, f = NULL)"},{"path":"https://kth-library.github.io/meili/reference/simple_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple search in Meilisearch index — simple_search","text":"index index search q string search filter filters apply search (optional)","code":""},{"path":"https://kth-library.github.io/meili/reference/wait_for_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Wait for status of a Meili task — wait_for_status","title":"Wait for status of a Meili task — wait_for_status","text":"Returns TRUE problem, returns FALSE writes error message error occured","code":""},{"path":"https://kth-library.github.io/meili/reference/wait_for_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wait for status of a Meili task — wait_for_status","text":"","code":"wait_for_status(task, verbose = FALSE)"},{"path":"https://kth-library.github.io/meili/reference/wait_for_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wait for status of a Meili task — wait_for_status","text":"task identifying number task verbose set TRUE talkative output","code":""}]
